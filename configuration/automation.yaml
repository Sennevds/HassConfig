- alias: "staande lampen uit"
  trigger:
    - platform: event
      event_type: button_pressed
      event_data: {"entity_id": "switch.staande_lampen", "state": "off"}
    - platform: state
      entity_id: switch.staande_lampen
      from: "on"
      to: "off"
  action:
    service: switch.turn_off
    entity_id:
      - switch.dj_staande_lamp
      - switch.eet_staande_lamp
      - switch.living_staande_lamp

- alias: "staande lampen aan"
  trigger:
    - platform: event
      event_type: button_pressed
      event_data: {"entity_id": "switch.staande_lampen", "state": "on"}
    - platform: state
      entity_id: switch.staande_lampen
      from: "off"
      to: "on"
  action:
    service: switch.turn_on
    entity_id:
      - switch.dj_staande_lamp
      - switch.eet_staande_lamp
      - switch.living_staande_lamp

- alias: "Movie time"
  trigger:
    - platform: event
      event_type: button_pressed
      event_data: {"entity_id": "switch.scene2", "state": "on"}
  action:
    - service: scene.turn_on
      entity_id: scene.film

- alias: "Movie time off"
  trigger:
    - platform: event
      event_type: button_pressed
      event_data: {"entity_id": "switch.scene2", "state": "off"}
  action:
    - service: scene.turn_on
      entity_id: scene.gezellig_tafelen

- alias: "Alles aan"
  trigger:
    - platform: event
      event_type: button_pressed
      event_data: {"entity_id": "switch.scene1", "state": "on"}
  action:
    - service: scene.turn_on
      entity_id: scene.alles_aan

- alias: "Alles uit"
  trigger:
    - platform: event
      event_type: button_pressed
      event_data: {"entity_id": "switch.scene1", "state": "off"}
  action:
    - service: scene.turn_on
      entity_id: scene.alles_uit

- alias: 'Wake Me Up'
  trigger:
    platform: template
    value_template: '{{ states.sensor.time.state == states.sensor.alarm_time.state }}'
  condition:
    condition: or
    conditions:
      - condition: and
        conditions:
          - condition: state
            entity_id: input_boolean.alarmweekday
            state: 'on'
          - condition: time
            weekday:
              - mon
              - tue
              - wed
              - thu
              - fri
          - condition: state
            entity_id: input_boolean.alarm
            state: 'on'
      - condition: and
        conditions:
          - condition: state
            entity_id: input_boolean.alarmweekday
            state: 'off'
          - condition: state
            entity_id: input_boolean.alarm
            state: 'on'
  action:
    - service: notify.tele
      data_template:
        message: 'Good morning. Time to Wake Up!'
        title: ''
    - service: light.turn_on
      entity_id:
        - light.slaapkamer
      data:
        transition: 15
        brightness: 75


- alias: 'iets lache'
  trigger:
    platform: state
    entity_id: input_boolean.say
    state: 'on'
  action:
    service: tts.google_say
    entity_id: media_player.teichmann_audio
    data:
      message: 'lisa you look awful' #'There''s someone at the door'

- alias: 'wall switch changed'
  trigger:
    platform: state
    entity_id: switch.switch_0_1
  action:
    service_template: >
      {%- if states('light.living_1') == 'off' -%}
        homeassistant.turn_on
      {%- else -%}
        homeassistant.turn_off
      {%- endif -%}
    entity_id: light.living_1

- alias: "Porch Input Effect"
  initial_state: True
  hide_entity: False
  trigger:
    - platform: state
      entity_id: input_select.cabinet_led_effect
  action:
    - service: mqtt.publish
      data_template:
        topic: "hass/mqttstrip/seteffect"
        payload: '{{ trigger.to_state.state | string }}'

- alias: "Porch Animation Speed"
  initial_state: True
  hide_entity: False
  trigger:
    - platform: state
      entity_id: input_slider.cabinet_animation_speed
  action:
    - service: mqtt.publish
      data_template:
        topic: "hass/mqttstrip/setanimationspeed"
        payload: '{{ trigger.to_state.state | int }}'

- alias: 'Update notifications'
  trigger:
    - platform: state
      entity_id: updater.updater
  action:
    service: notify.tele
    data:
      message: 'There is a new Home Assistant release available.'

- alias: 'test automation'
  trigger:
    platform: state
    entity_id: switch.test
  action:
    - service: light.turn_on
      entity_id:
        - light.living_1
      data:
        transition: 15
        brightness: 75

# - alias: 'update config'
#   trigger:
#     platform: numeric_state
#     entity_id: sensor.command_sensor
#     above: 0
#   action:
#     - service: script.turn_on
#       entity_id:
#         - script.update_and_restart
- alias: 'if switch goes offline send notification'
  trigger:
    platform: state
    entity_id: device_tracker.switch
    # Optional
    from: 'home'
    to: 'not_home'
    for:
      minutes: 5
  action:
    service: notify.tele
    data:
      message: 'Switch beneden is offline!'
